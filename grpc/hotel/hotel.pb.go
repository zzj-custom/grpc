// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: cmd/odas/grpc/hotel/hotel.proto

package hotel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义 RmSaleReportListRequest 消息
type RmSaleReportListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   []int64                `protobuf:"varint,1,rep,packed,name=sid,proto3" json:"sid,omitempty"`
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *RmSaleReportListRequest) Reset() {
	*x = RmSaleReportListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSaleReportListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSaleReportListRequest) ProtoMessage() {}

func (x *RmSaleReportListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSaleReportListRequest.ProtoReflect.Descriptor instead.
func (*RmSaleReportListRequest) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{0}
}

func (x *RmSaleReportListRequest) GetSid() []int64 {
	if x != nil {
		return x.Sid
	}
	return nil
}

func (x *RmSaleReportListRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *RmSaleReportListRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// 定义 RmSaleReportListResponse 消息
type RmSaleReportListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total *RmSaleReportTotal      `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RmSaleReportListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RmSaleReportListResponse) Reset() {
	*x = RmSaleReportListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSaleReportListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSaleReportListResponse) ProtoMessage() {}

func (x *RmSaleReportListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSaleReportListResponse.ProtoReflect.Descriptor instead.
func (*RmSaleReportListResponse) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{1}
}

func (x *RmSaleReportListResponse) GetTotal() *RmSaleReportTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *RmSaleReportListResponse) GetList() []*RmSaleReportListData {
	if x != nil {
		return x.List
	}
	return nil
}

type RmSaleReportTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomsTotal float64 `protobuf:"fixed64,1,opt,name=roomsTotal,proto3" json:"roomsTotal,omitempty"`
	RoomsOoo   float64 `protobuf:"fixed64,2,opt,name=roomsOoo,proto3" json:"roomsOoo,omitempty"`
	RoomsOs    float64 `protobuf:"fixed64,3,opt,name=roomsOs,proto3" json:"roomsOs,omitempty"`
	RoomsHse   float64 `protobuf:"fixed64,4,opt,name=roomsHse,proto3" json:"roomsHse,omitempty"`
	RoomsAvl   float64 `protobuf:"fixed64,5,opt,name=roomsAvl,proto3" json:"roomsAvl,omitempty"`
	RoomsVac   float64 `protobuf:"fixed64,6,opt,name=roomsVac,proto3" json:"roomsVac,omitempty"`
	SoldFit    float64 `protobuf:"fixed64,7,opt,name=soldFit,proto3" json:"soldFit,omitempty"`
	SoldGrp    float64 `protobuf:"fixed64,8,opt,name=soldGrp,proto3" json:"soldGrp,omitempty"`
	SoldLong   float64 `protobuf:"fixed64,9,opt,name=soldLong,proto3" json:"soldLong,omitempty"`
	SoldEnt    float64 `protobuf:"fixed64,10,opt,name=soldEnt,proto3" json:"soldEnt,omitempty"`
	RevFit     float64 `protobuf:"fixed64,11,opt,name=revFit,proto3" json:"revFit,omitempty"`
	RevGrp     float64 `protobuf:"fixed64,12,opt,name=revGrp,proto3" json:"revGrp,omitempty"`
	RevLong    float64 `protobuf:"fixed64,13,opt,name=revLong,proto3" json:"revLong,omitempty"`
	PeopleFit  int64   `protobuf:"varint,14,opt,name=peopleFit,proto3" json:"peopleFit,omitempty"`
	PeopleGrp  int64   `protobuf:"varint,15,opt,name=peopleGrp,proto3" json:"peopleGrp,omitempty"`
	PeopleLong int64   `protobuf:"varint,16,opt,name=peopleLong,proto3" json:"peopleLong,omitempty"`
}

func (x *RmSaleReportTotal) Reset() {
	*x = RmSaleReportTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSaleReportTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSaleReportTotal) ProtoMessage() {}

func (x *RmSaleReportTotal) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSaleReportTotal.ProtoReflect.Descriptor instead.
func (*RmSaleReportTotal) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{2}
}

func (x *RmSaleReportTotal) GetRoomsTotal() float64 {
	if x != nil {
		return x.RoomsTotal
	}
	return 0
}

func (x *RmSaleReportTotal) GetRoomsOoo() float64 {
	if x != nil {
		return x.RoomsOoo
	}
	return 0
}

func (x *RmSaleReportTotal) GetRoomsOs() float64 {
	if x != nil {
		return x.RoomsOs
	}
	return 0
}

func (x *RmSaleReportTotal) GetRoomsHse() float64 {
	if x != nil {
		return x.RoomsHse
	}
	return 0
}

func (x *RmSaleReportTotal) GetRoomsAvl() float64 {
	if x != nil {
		return x.RoomsAvl
	}
	return 0
}

func (x *RmSaleReportTotal) GetRoomsVac() float64 {
	if x != nil {
		return x.RoomsVac
	}
	return 0
}

func (x *RmSaleReportTotal) GetSoldFit() float64 {
	if x != nil {
		return x.SoldFit
	}
	return 0
}

func (x *RmSaleReportTotal) GetSoldGrp() float64 {
	if x != nil {
		return x.SoldGrp
	}
	return 0
}

func (x *RmSaleReportTotal) GetSoldLong() float64 {
	if x != nil {
		return x.SoldLong
	}
	return 0
}

func (x *RmSaleReportTotal) GetSoldEnt() float64 {
	if x != nil {
		return x.SoldEnt
	}
	return 0
}

func (x *RmSaleReportTotal) GetRevFit() float64 {
	if x != nil {
		return x.RevFit
	}
	return 0
}

func (x *RmSaleReportTotal) GetRevGrp() float64 {
	if x != nil {
		return x.RevGrp
	}
	return 0
}

func (x *RmSaleReportTotal) GetRevLong() float64 {
	if x != nil {
		return x.RevLong
	}
	return 0
}

func (x *RmSaleReportTotal) GetPeopleFit() int64 {
	if x != nil {
		return x.PeopleFit
	}
	return 0
}

func (x *RmSaleReportTotal) GetPeopleGrp() int64 {
	if x != nil {
		return x.PeopleGrp
	}
	return 0
}

func (x *RmSaleReportTotal) GetPeopleLong() int64 {
	if x != nil {
		return x.PeopleLong
	}
	return 0
}

type RmSaleReportListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindId int64              `protobuf:"varint,1,opt,name=bindId,proto3" json:"bindId,omitempty"`
	Name   string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Total  *RmSaleReportTotal `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RmSaleReportListData) Reset() {
	*x = RmSaleReportListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSaleReportListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSaleReportListData) ProtoMessage() {}

func (x *RmSaleReportListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSaleReportListData.ProtoReflect.Descriptor instead.
func (*RmSaleReportListData) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{3}
}

func (x *RmSaleReportListData) GetBindId() int64 {
	if x != nil {
		return x.BindId
	}
	return 0
}

func (x *RmSaleReportListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RmSaleReportListData) GetTotal() *RmSaleReportTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

// 定义 RmSaleReportDateListRequest 消息
type RmSaleReportDateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total *RmSaleReportTotal          `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RmSaleReportDateListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RmSaleReportDateListResponse) Reset() {
	*x = RmSaleReportDateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSaleReportDateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSaleReportDateListResponse) ProtoMessage() {}

func (x *RmSaleReportDateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSaleReportDateListResponse.ProtoReflect.Descriptor instead.
func (*RmSaleReportDateListResponse) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{4}
}

func (x *RmSaleReportDateListResponse) GetTotal() *RmSaleReportTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *RmSaleReportDateListResponse) GetList() []*RmSaleReportDateListData {
	if x != nil {
		return x.List
	}
	return nil
}

type RmSaleReportDateListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string             `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Total *RmSaleReportTotal `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RmSaleReportDateListData) Reset() {
	*x = RmSaleReportDateListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSaleReportDateListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSaleReportDateListData) ProtoMessage() {}

func (x *RmSaleReportDateListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSaleReportDateListData.ProtoReflect.Descriptor instead.
func (*RmSaleReportDateListData) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{5}
}

func (x *RmSaleReportDateListData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *RmSaleReportDateListData) GetTotal() *RmSaleReportTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

// 定义 RevenueReportSummaryRequest 消息
type RevenueReportSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid          []int64                `protobuf:"varint,1,rep,packed,name=sid,proto3" json:"sid,omitempty"`
	Start        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	CodeCategory []string               `protobuf:"bytes,4,rep,name=codeCategory,proto3" json:"codeCategory,omitempty"`
}

func (x *RevenueReportSummaryRequest) Reset() {
	*x = RevenueReportSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevenueReportSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueReportSummaryRequest) ProtoMessage() {}

func (x *RevenueReportSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueReportSummaryRequest.ProtoReflect.Descriptor instead.
func (*RevenueReportSummaryRequest) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{6}
}

func (x *RevenueReportSummaryRequest) GetSid() []int64 {
	if x != nil {
		return x.Sid
	}
	return nil
}

func (x *RevenueReportSummaryRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *RevenueReportSummaryRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *RevenueReportSummaryRequest) GetCodeCategory() []string {
	if x != nil {
		return x.CodeCategory
	}
	return nil
}

// 定义 RevenueReportSummaryResponse 消息
type RevenueReportSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total *RevenueReportTotal  `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RevenueReportData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RevenueReportSummaryResponse) Reset() {
	*x = RevenueReportSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevenueReportSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueReportSummaryResponse) ProtoMessage() {}

func (x *RevenueReportSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueReportSummaryResponse.ProtoReflect.Descriptor instead.
func (*RevenueReportSummaryResponse) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{7}
}

func (x *RevenueReportSummaryResponse) GetTotal() *RevenueReportTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *RevenueReportSummaryResponse) GetList() []*RevenueReportData {
	if x != nil {
		return x.List
	}
	return nil
}

type RevenueReportTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevTotal    float64 `protobuf:"fixed64,1,opt,name=revTotal,proto3" json:"revTotal,omitempty"`
	RevRm       float64 `protobuf:"fixed64,2,opt,name=revRm,proto3" json:"revRm,omitempty"`
	RevFb       float64 `protobuf:"fixed64,3,opt,name=revFb,proto3" json:"revFb,omitempty"`
	RevMt       float64 `protobuf:"fixed64,4,opt,name=revMt,proto3" json:"revMt,omitempty"`
	RevEn       float64 `protobuf:"fixed64,5,opt,name=revEn,proto3" json:"revEn,omitempty"`
	RevSp       float64 `protobuf:"fixed64,6,opt,name=revSp,proto3" json:"revSp,omitempty"`
	RevOt       float64 `protobuf:"fixed64,7,opt,name=revOt,proto3" json:"revOt,omitempty"`
	RoomsTotal  float64 `protobuf:"fixed64,8,opt,name=roomsTotal,proto3" json:"roomsTotal,omitempty"`
	RoomsArr    float64 `protobuf:"fixed64,9,opt,name=roomsArr,proto3" json:"roomsArr,omitempty"`
	RoomsDep    float64 `protobuf:"fixed64,10,opt,name=roomsDep,proto3" json:"roomsDep,omitempty"`
	RoomsNoShow int64   `protobuf:"varint,11,opt,name=roomsNoShow,proto3" json:"roomsNoShow,omitempty"`
	RoomsCxl    int64   `protobuf:"varint,12,opt,name=roomsCxl,proto3" json:"roomsCxl,omitempty"`
	People      int64   `protobuf:"varint,13,opt,name=people,proto3" json:"people,omitempty"`
	PeopleArr   int64   `protobuf:"varint,14,opt,name=peopleArr,proto3" json:"peopleArr,omitempty"`
	PeopleDep   int64   `protobuf:"varint,15,opt,name=peopleDep,proto3" json:"peopleDep,omitempty"`
}

func (x *RevenueReportTotal) Reset() {
	*x = RevenueReportTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevenueReportTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueReportTotal) ProtoMessage() {}

func (x *RevenueReportTotal) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueReportTotal.ProtoReflect.Descriptor instead.
func (*RevenueReportTotal) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{8}
}

func (x *RevenueReportTotal) GetRevTotal() float64 {
	if x != nil {
		return x.RevTotal
	}
	return 0
}

func (x *RevenueReportTotal) GetRevRm() float64 {
	if x != nil {
		return x.RevRm
	}
	return 0
}

func (x *RevenueReportTotal) GetRevFb() float64 {
	if x != nil {
		return x.RevFb
	}
	return 0
}

func (x *RevenueReportTotal) GetRevMt() float64 {
	if x != nil {
		return x.RevMt
	}
	return 0
}

func (x *RevenueReportTotal) GetRevEn() float64 {
	if x != nil {
		return x.RevEn
	}
	return 0
}

func (x *RevenueReportTotal) GetRevSp() float64 {
	if x != nil {
		return x.RevSp
	}
	return 0
}

func (x *RevenueReportTotal) GetRevOt() float64 {
	if x != nil {
		return x.RevOt
	}
	return 0
}

func (x *RevenueReportTotal) GetRoomsTotal() float64 {
	if x != nil {
		return x.RoomsTotal
	}
	return 0
}

func (x *RevenueReportTotal) GetRoomsArr() float64 {
	if x != nil {
		return x.RoomsArr
	}
	return 0
}

func (x *RevenueReportTotal) GetRoomsDep() float64 {
	if x != nil {
		return x.RoomsDep
	}
	return 0
}

func (x *RevenueReportTotal) GetRoomsNoShow() int64 {
	if x != nil {
		return x.RoomsNoShow
	}
	return 0
}

func (x *RevenueReportTotal) GetRoomsCxl() int64 {
	if x != nil {
		return x.RoomsCxl
	}
	return 0
}

func (x *RevenueReportTotal) GetPeople() int64 {
	if x != nil {
		return x.People
	}
	return 0
}

func (x *RevenueReportTotal) GetPeopleArr() int64 {
	if x != nil {
		return x.PeopleArr
	}
	return 0
}

func (x *RevenueReportTotal) GetPeopleDep() int64 {
	if x != nil {
		return x.PeopleDep
	}
	return 0
}

type RevenueReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeCategory    string              `protobuf:"bytes,1,opt,name=codeCategory,proto3" json:"codeCategory,omitempty"`
	CodeCategoryDes string              `protobuf:"bytes,2,opt,name=codeCategoryDes,proto3" json:"codeCategoryDes,omitempty"`
	Total           *RevenueReportTotal `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RevenueReportData) Reset() {
	*x = RevenueReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevenueReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueReportData) ProtoMessage() {}

func (x *RevenueReportData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueReportData.ProtoReflect.Descriptor instead.
func (*RevenueReportData) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{9}
}

func (x *RevenueReportData) GetCodeCategory() string {
	if x != nil {
		return x.CodeCategory
	}
	return ""
}

func (x *RevenueReportData) GetCodeCategoryDes() string {
	if x != nil {
		return x.CodeCategoryDes
	}
	return ""
}

func (x *RevenueReportData) GetTotal() *RevenueReportTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

// 定义 OccupancyRequest 消息
type OccupancyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   []int64                `protobuf:"varint,1,rep,packed,name=sid,proto3" json:"sid,omitempty"`
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *OccupancyRequest) Reset() {
	*x = OccupancyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccupancyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccupancyRequest) ProtoMessage() {}

func (x *OccupancyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccupancyRequest.ProtoReflect.Descriptor instead.
func (*OccupancyRequest) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{10}
}

func (x *OccupancyRequest) GetSid() []int64 {
	if x != nil {
		return x.Sid
	}
	return nil
}

func (x *OccupancyRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *OccupancyRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// 定义 OccupancyResponse 消息
type OccupancyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Occupancy int64 `protobuf:"varint,1,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
}

func (x *OccupancyResponse) Reset() {
	*x = OccupancyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccupancyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccupancyResponse) ProtoMessage() {}

func (x *OccupancyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccupancyResponse.ProtoReflect.Descriptor instead.
func (*OccupancyResponse) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{11}
}

func (x *OccupancyResponse) GetOccupancy() int64 {
	if x != nil {
		return x.Occupancy
	}
	return 0
}

// 定义 RmOrderDateListRequest 消息
type RmOrderDateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   []int64                `protobuf:"varint,1,rep,packed,name=sid,proto3" json:"sid,omitempty"`
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *RmOrderDateListRequest) Reset() {
	*x = RmOrderDateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmOrderDateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmOrderDateListRequest) ProtoMessage() {}

func (x *RmOrderDateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmOrderDateListRequest.ProtoReflect.Descriptor instead.
func (*RmOrderDateListRequest) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{12}
}

func (x *RmOrderDateListRequest) GetSid() []int64 {
	if x != nil {
		return x.Sid
	}
	return nil
}

func (x *RmOrderDateListRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *RmOrderDateListRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// 定义 RmOrderDateListResponse 消息
type RmOrderDateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*RmOrderDateListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total *RmOrderDateTotal      `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RmOrderDateListResponse) Reset() {
	*x = RmOrderDateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmOrderDateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmOrderDateListResponse) ProtoMessage() {}

func (x *RmOrderDateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmOrderDateListResponse.ProtoReflect.Descriptor instead.
func (*RmOrderDateListResponse) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{13}
}

func (x *RmOrderDateListResponse) GetList() []*RmOrderDateListData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RmOrderDateListResponse) GetTotal() *RmOrderDateTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

type RmOrderDateListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string            `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Total *RmOrderDateTotal `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RmOrderDateListData) Reset() {
	*x = RmOrderDateListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmOrderDateListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmOrderDateListData) ProtoMessage() {}

func (x *RmOrderDateListData) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmOrderDateListData.ProtoReflect.Descriptor instead.
func (*RmOrderDateListData) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{14}
}

func (x *RmOrderDateListData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *RmOrderDateListData) GetTotal() *RmOrderDateTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

type RmOrderDateTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingCount    int64 `protobuf:"varint,1,opt,name=bookingCount,proto3" json:"bookingCount,omitempty"`
	BookingRoomNum  int64 `protobuf:"varint,2,opt,name=bookingRoomNum,proto3" json:"bookingRoomNum,omitempty"`
	BookingAdult    int64 `protobuf:"varint,3,opt,name=bookingAdult,proto3" json:"bookingAdult,omitempty"`
	BookingChildren int64 `protobuf:"varint,4,opt,name=bookingChildren,proto3" json:"bookingChildren,omitempty"`
	BookingPeople   int64 `protobuf:"varint,5,opt,name=bookingPeople,proto3" json:"bookingPeople,omitempty"`
	BookingCharge   int64 `protobuf:"varint,6,opt,name=bookingCharge,proto3" json:"bookingCharge,omitempty"`
	BookingPay      int64 `protobuf:"varint,7,opt,name=bookingPay,proto3" json:"bookingPay,omitempty"`
	CheckInCount    int64 `protobuf:"varint,8,opt,name=checkInCount,proto3" json:"checkInCount,omitempty"`
	CheckInRoomNum  int64 `protobuf:"varint,9,opt,name=checkInRoomNum,proto3" json:"checkInRoomNum,omitempty"`
	CheckInAdult    int64 `protobuf:"varint,10,opt,name=checkInAdult,proto3" json:"checkInAdult,omitempty"`
	CheckInChildren int64 `protobuf:"varint,11,opt,name=checkInChildren,proto3" json:"checkInChildren,omitempty"`
	CheckInPeople   int64 `protobuf:"varint,12,opt,name=checkInPeople,proto3" json:"checkInPeople,omitempty"`
	CheckInCharge   int64 `protobuf:"varint,13,opt,name=checkInCharge,proto3" json:"checkInCharge,omitempty"`
	CheckInPay      int64 `protobuf:"varint,14,opt,name=checkInPay,proto3" json:"checkInPay,omitempty"`
}

func (x *RmOrderDateTotal) Reset() {
	*x = RmOrderDateTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmOrderDateTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmOrderDateTotal) ProtoMessage() {}

func (x *RmOrderDateTotal) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmOrderDateTotal.ProtoReflect.Descriptor instead.
func (*RmOrderDateTotal) Descriptor() ([]byte, []int) {
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP(), []int{15}
}

func (x *RmOrderDateTotal) GetBookingCount() int64 {
	if x != nil {
		return x.BookingCount
	}
	return 0
}

func (x *RmOrderDateTotal) GetBookingRoomNum() int64 {
	if x != nil {
		return x.BookingRoomNum
	}
	return 0
}

func (x *RmOrderDateTotal) GetBookingAdult() int64 {
	if x != nil {
		return x.BookingAdult
	}
	return 0
}

func (x *RmOrderDateTotal) GetBookingChildren() int64 {
	if x != nil {
		return x.BookingChildren
	}
	return 0
}

func (x *RmOrderDateTotal) GetBookingPeople() int64 {
	if x != nil {
		return x.BookingPeople
	}
	return 0
}

func (x *RmOrderDateTotal) GetBookingCharge() int64 {
	if x != nil {
		return x.BookingCharge
	}
	return 0
}

func (x *RmOrderDateTotal) GetBookingPay() int64 {
	if x != nil {
		return x.BookingPay
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInCount() int64 {
	if x != nil {
		return x.CheckInCount
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInRoomNum() int64 {
	if x != nil {
		return x.CheckInRoomNum
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInAdult() int64 {
	if x != nil {
		return x.CheckInAdult
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInChildren() int64 {
	if x != nil {
		return x.CheckInChildren
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInPeople() int64 {
	if x != nil {
		return x.CheckInPeople
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInCharge() int64 {
	if x != nil {
		return x.CheckInCharge
	}
	return 0
}

func (x *RmOrderDateTotal) GetCheckInPay() int64 {
	if x != nil {
		return x.CheckInPay
	}
	return 0
}

var File_cmd_odas_grpc_hotel_hotel_proto protoreflect.FileDescriptor

var file_cmd_odas_grpc_hotel_hotel_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6d, 0x64, 0x2f, 0x6f, 0x64, 0x61, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2f, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x22, 0x6f, 0x0a, 0x18, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x6d,
	0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xcd, 0x03, 0x0a, 0x11, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x4f, 0x6f, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x4f, 0x6f, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x4f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x4f, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x48, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x48, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x41, 0x76, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x41, 0x76, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x56, 0x61,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x56, 0x61,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x46, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x46, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x6c, 0x64, 0x47, 0x72, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x6f,
	0x6c, 0x64, 0x47, 0x72, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x64, 0x4c, 0x6f, 0x6e,
	0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x6f, 0x6c, 0x64, 0x4c, 0x6f, 0x6e,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x76, 0x46, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x76,
	0x46, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x47, 0x72, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x76, 0x47, 0x72, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x76, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x72, 0x65,
	0x76, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x46,
	0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x46, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x47, 0x72, 0x70,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x47, 0x72,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x6e,
	0x67, 0x22, 0x6c, 0x0a, 0x14, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x77, 0x0a, 0x1c, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x52, 0x6d, 0x53, 0x61,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xb3, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x71, 0x0a, 0x1c, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9e, 0x03, 0x0a, 0x12,
	0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x76, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x76, 0x52, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72,
	0x65, 0x76, 0x52, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x76, 0x46, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x65, 0x76, 0x46, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x76, 0x4d, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x65, 0x76, 0x4d, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x76, 0x45, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x72, 0x65, 0x76, 0x45, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x76, 0x53, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x65, 0x76, 0x53, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x76, 0x4f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x65, 0x76,
	0x4f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x41, 0x72, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x41, 0x72, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x44, 0x65, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x44, 0x65, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x4e, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x4e, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x78, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x78, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x72, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x72, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x22, 0x8c, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x10,
	0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x31, 0x0a, 0x11, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x63, 0x63, 0x75,
	0x70, 0x61, 0x6e, 0x63, 0x79, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x6c, 0x0a, 0x17, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x52, 0x0a, 0x13, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9e, 0x04, 0x0a, 0x10, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x6f,
	0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x50, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x50, 0x61, 0x79, 0x32, 0x81, 0x03, 0x0a, 0x0c, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x52, 0x6d, 0x53,
	0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x14, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x52, 0x6d, 0x53, 0x61,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x52, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x52,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x11, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0f, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x52, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e, 0x6f, 0x64, 0x61,
	0x73, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x6f, 0x64, 0x61, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x68, 0x6f, 0x74, 0x65, 0x6c, 0x3b, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cmd_odas_grpc_hotel_hotel_proto_rawDescOnce sync.Once
	file_cmd_odas_grpc_hotel_hotel_proto_rawDescData = file_cmd_odas_grpc_hotel_hotel_proto_rawDesc
)

func file_cmd_odas_grpc_hotel_hotel_proto_rawDescGZIP() []byte {
	file_cmd_odas_grpc_hotel_hotel_proto_rawDescOnce.Do(func() {
		file_cmd_odas_grpc_hotel_hotel_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_odas_grpc_hotel_hotel_proto_rawDescData)
	})
	return file_cmd_odas_grpc_hotel_hotel_proto_rawDescData
}

var file_cmd_odas_grpc_hotel_hotel_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_cmd_odas_grpc_hotel_hotel_proto_goTypes = []interface{}{
	(*RmSaleReportListRequest)(nil),      // 0: RmSaleReportListRequest
	(*RmSaleReportListResponse)(nil),     // 1: RmSaleReportListResponse
	(*RmSaleReportTotal)(nil),            // 2: RmSaleReportTotal
	(*RmSaleReportListData)(nil),         // 3: RmSaleReportListData
	(*RmSaleReportDateListResponse)(nil), // 4: RmSaleReportDateListResponse
	(*RmSaleReportDateListData)(nil),     // 5: RmSaleReportDateListData
	(*RevenueReportSummaryRequest)(nil),  // 6: RevenueReportSummaryRequest
	(*RevenueReportSummaryResponse)(nil), // 7: RevenueReportSummaryResponse
	(*RevenueReportTotal)(nil),           // 8: RevenueReportTotal
	(*RevenueReportData)(nil),            // 9: RevenueReportData
	(*OccupancyRequest)(nil),             // 10: OccupancyRequest
	(*OccupancyResponse)(nil),            // 11: OccupancyResponse
	(*RmOrderDateListRequest)(nil),       // 12: RmOrderDateListRequest
	(*RmOrderDateListResponse)(nil),      // 13: RmOrderDateListResponse
	(*RmOrderDateListData)(nil),          // 14: RmOrderDateListData
	(*RmOrderDateTotal)(nil),             // 15: RmOrderDateTotal
	(*timestamppb.Timestamp)(nil),        // 16: google.protobuf.Timestamp
}
var file_cmd_odas_grpc_hotel_hotel_proto_depIdxs = []int32{
	16, // 0: RmSaleReportListRequest.start:type_name -> google.protobuf.Timestamp
	16, // 1: RmSaleReportListRequest.end:type_name -> google.protobuf.Timestamp
	2,  // 2: RmSaleReportListResponse.total:type_name -> RmSaleReportTotal
	3,  // 3: RmSaleReportListResponse.list:type_name -> RmSaleReportListData
	2,  // 4: RmSaleReportListData.total:type_name -> RmSaleReportTotal
	2,  // 5: RmSaleReportDateListResponse.total:type_name -> RmSaleReportTotal
	5,  // 6: RmSaleReportDateListResponse.list:type_name -> RmSaleReportDateListData
	2,  // 7: RmSaleReportDateListData.total:type_name -> RmSaleReportTotal
	16, // 8: RevenueReportSummaryRequest.start:type_name -> google.protobuf.Timestamp
	16, // 9: RevenueReportSummaryRequest.end:type_name -> google.protobuf.Timestamp
	8,  // 10: RevenueReportSummaryResponse.total:type_name -> RevenueReportTotal
	9,  // 11: RevenueReportSummaryResponse.list:type_name -> RevenueReportData
	8,  // 12: RevenueReportData.total:type_name -> RevenueReportTotal
	16, // 13: OccupancyRequest.start:type_name -> google.protobuf.Timestamp
	16, // 14: OccupancyRequest.end:type_name -> google.protobuf.Timestamp
	16, // 15: RmOrderDateListRequest.start:type_name -> google.protobuf.Timestamp
	16, // 16: RmOrderDateListRequest.end:type_name -> google.protobuf.Timestamp
	14, // 17: RmOrderDateListResponse.list:type_name -> RmOrderDateListData
	15, // 18: RmOrderDateListResponse.total:type_name -> RmOrderDateTotal
	15, // 19: RmOrderDateListData.total:type_name -> RmOrderDateTotal
	0,  // 20: HotelService.RmSaleReportList:input_type -> RmSaleReportListRequest
	0,  // 21: HotelService.RmSaleReportDateList:input_type -> RmSaleReportListRequest
	6,  // 22: HotelService.RevenueReportSummary:input_type -> RevenueReportSummaryRequest
	10, // 23: HotelService.Occupancy:input_type -> OccupancyRequest
	12, // 24: HotelService.RmOrderDateList:input_type -> RmOrderDateListRequest
	1,  // 25: HotelService.RmSaleReportList:output_type -> RmSaleReportListResponse
	4,  // 26: HotelService.RmSaleReportDateList:output_type -> RmSaleReportDateListResponse
	7,  // 27: HotelService.RevenueReportSummary:output_type -> RevenueReportSummaryResponse
	11, // 28: HotelService.Occupancy:output_type -> OccupancyResponse
	13, // 29: HotelService.RmOrderDateList:output_type -> RmOrderDateListResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_cmd_odas_grpc_hotel_hotel_proto_init() }
func file_cmd_odas_grpc_hotel_hotel_proto_init() {
	if File_cmd_odas_grpc_hotel_hotel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSaleReportListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSaleReportListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSaleReportTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSaleReportListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSaleReportDateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSaleReportDateListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevenueReportSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevenueReportSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevenueReportTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevenueReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccupancyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccupancyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmOrderDateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmOrderDateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmOrderDateListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_odas_grpc_hotel_hotel_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmOrderDateTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_odas_grpc_hotel_hotel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmd_odas_grpc_hotel_hotel_proto_goTypes,
		DependencyIndexes: file_cmd_odas_grpc_hotel_hotel_proto_depIdxs,
		MessageInfos:      file_cmd_odas_grpc_hotel_hotel_proto_msgTypes,
	}.Build()
	File_cmd_odas_grpc_hotel_hotel_proto = out.File
	file_cmd_odas_grpc_hotel_hotel_proto_rawDesc = nil
	file_cmd_odas_grpc_hotel_hotel_proto_goTypes = nil
	file_cmd_odas_grpc_hotel_hotel_proto_depIdxs = nil
}
