// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.20.3
// source: cmd/odas/grpc/temporary_booking/temporary_booking.proto

package temporary_booking

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TemporaryBookingService_LastDayTemporaryBookingSummary_FullMethodName = "/TemporaryBookingService/LastDayTemporaryBookingSummary"
)

// TemporaryBookingServiceClient is the client API for TemporaryBookingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TemporaryBookingServiceClient interface {
	// 临时下单/预定实时数据（最近24小时的数据）
	LastDayTemporaryBookingSummary(ctx context.Context, in *TemporaryBookingSummaryRequest, opts ...grpc.CallOption) (*TemporaryBookingSummaryResponse, error)
}

type temporaryBookingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTemporaryBookingServiceClient(cc grpc.ClientConnInterface) TemporaryBookingServiceClient {
	return &temporaryBookingServiceClient{cc}
}

func (c *temporaryBookingServiceClient) LastDayTemporaryBookingSummary(ctx context.Context, in *TemporaryBookingSummaryRequest, opts ...grpc.CallOption) (*TemporaryBookingSummaryResponse, error) {
	out := new(TemporaryBookingSummaryResponse)
	err := c.cc.Invoke(ctx, TemporaryBookingService_LastDayTemporaryBookingSummary_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TemporaryBookingServiceServer is the server API for TemporaryBookingService service.
// All implementations must embed UnimplementedTemporaryBookingServiceServer
// for forward compatibility
type TemporaryBookingServiceServer interface {
	// 临时下单/预定实时数据（最近24小时的数据）
	LastDayTemporaryBookingSummary(context.Context, *TemporaryBookingSummaryRequest) (*TemporaryBookingSummaryResponse, error)
	mustEmbedUnimplementedTemporaryBookingServiceServer()
}

// UnimplementedTemporaryBookingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTemporaryBookingServiceServer struct {
}

func (UnimplementedTemporaryBookingServiceServer) LastDayTemporaryBookingSummary(context.Context, *TemporaryBookingSummaryRequest) (*TemporaryBookingSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LastDayTemporaryBookingSummary not implemented")
}
func (UnimplementedTemporaryBookingServiceServer) mustEmbedUnimplementedTemporaryBookingServiceServer() {
}

// UnsafeTemporaryBookingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TemporaryBookingServiceServer will
// result in compilation errors.
type UnsafeTemporaryBookingServiceServer interface {
	mustEmbedUnimplementedTemporaryBookingServiceServer()
}

func RegisterTemporaryBookingServiceServer(s grpc.ServiceRegistrar, srv TemporaryBookingServiceServer) {
	s.RegisterService(&TemporaryBookingService_ServiceDesc, srv)
}

func _TemporaryBookingService_LastDayTemporaryBookingSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemporaryBookingSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemporaryBookingServiceServer).LastDayTemporaryBookingSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TemporaryBookingService_LastDayTemporaryBookingSummary_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemporaryBookingServiceServer).LastDayTemporaryBookingSummary(ctx, req.(*TemporaryBookingSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TemporaryBookingService_ServiceDesc is the grpc.ServiceDesc for TemporaryBookingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TemporaryBookingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "TemporaryBookingService",
	HandlerType: (*TemporaryBookingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LastDayTemporaryBookingSummary",
			Handler:    _TemporaryBookingService_LastDayTemporaryBookingSummary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmd/odas/grpc/temporary_booking/temporary_booking.proto",
}
